###########
# BUILDER # --> discarded after running FINAL simply used for base level activity
###########

FROM python:3.10.7-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc

# upgrade pip and copy over project to container
RUN pip install --upgrade pip
COPY . /usr/src/app/

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL  ---< stems from builder. builder will grab all base level components 
#########           while FINAL deals with production level requirements


FROM python:3.10.7-slim-buster

# create directory for the app user
RUN mkdir -p /home/app

# create the app user - adversary will not obtain root of container this way. If they break out of container
# they will have root on the OS the docker daemon is running on without this setup.
RUN addgroup --system app && adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*


# copy project
COPY . $APP_HOME

# change ownership of all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user -- root no longer accessible 
USER app

